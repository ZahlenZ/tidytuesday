---
title: House of Representatives
author: Zahlen Zbinden
output: pdf
---

```{r}
#| warning: false
#| echo: false
library(dplyr)
library(forcats)
library(ggplot2)
library(maps)
library(RColorBrewer)
library(tidyverse)
library(tidytuesdayR)
library(waffle)
library(gt)
```

## Load Data

```{r}
url = "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-07/house.csv"

house <- read.csv(url)
```

## Explore Data

Data set consists of elected officials to the house of representatives in the from 1976 to 2022, it countains attributes describing if the state was flipped, which district, if the election was a runoff, or special, which candidate won, what party they are a part of, Total Votes and Candidate votes.

```{r}
unique(house$office)
```

```{r}
unique(house$year)
```

```{r}
nrow(house)
ncol(house)
```

```{r}
length(unique(house$state))
```

## Wrangle Data

```{r}
house <- house |>
          mutate(
            party = ifelse(
              party == "",
              house$candidate,
              party
            )
          ) |>
          group_by(party) |>
          mutate(party_votes = sum(candidatevotes)) |>
          ungroup() |>
          mutate(
            party = factor(
              party,
              levels = unique(party[order(desc(party_votes))]),
              ordered = TRUE
            )
          )
```

## House votes year by year

```{r}
house_waffle <- house |>
                  filter(party %in% c("REPUBLICAN", "DEMOCRAT", "LIBERTARIAN")) |>
                  group_by(year, party) |>
                  summarise(party_votes = sum(candidatevotes)) |>
                  group_by(year) |>
                  mutate(total_votes = sum(party_votes)) |>
                  mutate(vote_ratio = round((party_votes / total_votes), digits = 2) * 100) |>
                  select("year", "party", "vote_ratio") 

view(house_waffle)
```

Plot the data

```{r}
election_colors <- c("DEMOCRAT" = "darkblue", "REPUBLICAN" = "firebrick", "LIBERTARIAN" = "#1c4d1a")
```

```{r}
house_waffle |>
  ggplot() +
    geom_waffle(
      aes(fill = party, values = vote_ratio),
      color = "white",
      size = .5,
      n_rows = 10,
      flip = TRUE
    ) +
    facet_wrap(~ year, ncol = 6) +
    scale_x_discrete(limits = "") +
    coord_equal() +
    scale_fill_manual(values = election_colors) +
    theme(
      panel.grid.major.x = element_blank(),
      panel.grid.minor.y = element_blank()
    )
```

## House seats year by year


```{r}
house_waffle <- house |>
                  filter(party %in% c("DEMOCRAT", "REPUBLICAN")) |>
                  group_by(year, party) |>
                  summarise(party_seats = n()) |>
                  group_by(year) |>
                  mutate(total_seats = sum(party_seats)) |>
                  mutate(seat_ratio = round(party_seats / total_seats, digits = 2) * 100) |>
                  select("year", "party", "seat_ratio")

view(house_waffle)
```

```{r}
house_plot <- house_waffle |>
                  ggplot() +
                    geom_waffle(
                      aes(fill = party, values = seat_ratio),
                      color = "white",
                      size = .5,
                      n_rows = 10,
                      flip = TRUE
                    ) +
                    facet_wrap(
                      ~ year, 
                      ncol = 6,
                      strip.position = "bottom"
                    ) +
                    scale_x_discrete(limits = "") +
                    coord_equal() +
                    scale_fill_manual(values = election_colors, name = "") +
                    theme(
                      panel.grid.major.x = element_blank(),
                      panel.grid.minor.y = element_blank(),
                      axis.text.y = element_blank(),
                      axis.ticks.y = element_blank(),
                      axis.ticks.x = element_blank(),
                      legend.position = "top",
                      plot.background = element_rect(fill = "#e4d4c6"),
                      strip.background = element_rect(fill = "gray"),
                      legend.background = element_rect(fill = "#e4d4c6"),
                      panel.background = element_rect(fill = "#e4d4c6"),
                      axis.line = element_line(color = "#e4d4c6")
                    )
house_plot
```



```{r}
ggsave("11-07-23/house_election.png", house_plot, width = 5, height = 5)
```