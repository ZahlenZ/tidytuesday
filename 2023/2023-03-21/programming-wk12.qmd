---
author: "Zahlen Zbinden"
title: "Programming Languages"
date: "11-17-2023"
format: pdf
---

## Setup

```{r setup, include = FALSE}
knitr::opts_chunk$set(
    echo = TRUE,
    message = FALSE,
    warning = FALSE
)
library(ggplot2)
library(ggthemes)
library(showtext)
library(tidyverse)
library(ggsankey)
```

## Load Data

```{r}
tuesdata <- tidytuesdayR::tt_load(2023, week = 12)
languages <- tuesdata$languages
```

## Wrangle Data

```{r}
languages <- languages |>
              arrange(desc(number_of_users)) |>
              slice(1:20) 
```

## Load Fonts

```{r}
font_add_google("Roboto Mono", "robot")
text_font <- "robot"
text_col <- "grey"
showtext_auto()
```

## Plot Data

```{r}
language_plot <- languages |>
                  mutate(
                    title = ifelse(
                      title == "Arduino Programming Language",
                      "Arduino",
                      title
                    )
                  ) |>
                  mutate(
                    title = factor(
                      title,
                      levels = title[order(desc(number_of_users))]
                    ), 
                  ) |>
                  mutate(
                    label = paste("Comment token:", line_comment_token)
                  ) |>
                  select(
                    "title", 
                    "number_of_users",
                    "number_of_jobs",
                    "label"
                  ) |>
                  melt(id.vars = c("title", "label"))
```

```{r}
segment_plot <- languages |>
                  mutate(
                    title = ifelse(
                      title == "Arduino Programming Language",
                      "Arduino",
                      title
                    )
                  ) |>
                  mutate(
                    title = factor(
                      title,
                      levels = title[order(desc(number_of_users))]
                    ),
                  ) |>
                  mutate(
                    label = paste("Comment token:", line_comment_token)
                  ) |>
                  select(
                    "title",
                    "number_of_users",
                    "number_of_jobs",
                    "label"
                  )
```

## Plot

```{r}
language_plot |>
  ggplot(aes(x = value, y = title)) +
    geom_segment(
      data = segment_plot,
      aes(
        x = number_of_users,
        xend = number_of_jobs,
        y = title,
        yend = title
      ),
      color = text_col,
      size = 1
    ) +
    geom_point(
      aes(
        shape = variable,
        color = variable
      ),
      size = 5
    ) +
    geom_richtext(
      aes(x = 0, y = title, label = title),
      hjust = 0,
      label.margin = unit(c(0, 0, 0, .75), "lines"),
      family = "robot",
      size = 5,
      fill = "transparent",
      label.color = "transparent",
      color = text_col
    ) +
    labs(
      title = "Number of Jobs and Users",
      subtitle = "Segmented by comment token",
      y = "Language",
      x = ""
    ) +
    scale_x_log10(
      limits = c(1, 10000000),
      breaks = c(6000, 300000, 6000000)
    ) +
    scale_y_discrete(limits = rev) +
    scale_shape_manual(
      name = "",
      values = c(15, 15), 
      labels = c("Users", "Jobs")
    ) +
    scale_color_brewer(
      name = "",
      labels = c("Users", "Jobs"),
      type = "qual",
      palette = 7
    ) +
    guides(
      shape = guide_legend(reverse = TRUE),
      color = guide_legend(reverse = TRUE)
    ) +
    facet_wrap(~ label, nrow = 2, scales = "free_y") +
    theme_minimal(
      base_size = 15,
      base_family = "robot"
    ) +
    theme(
      plot.title = element_text(color = text_col),
      plot.subtitle = element_text(color = text_col),
      strip.text = element_text(color = text_col),
      legend.title = element_text(color = text_col),
      legend.text = element_text(color = text_col),
      legend.position = "top",
      axis.title = element_text(color = text_col),
      axis.title.y = element_text(angle = 0, vjust = 0.5),
      axis.ticks = element_blank(),
      axis.text.x = element_text(color = text_col, angle = 45, vjust = .5),
      axis.text.y = element_blank(),
      plot.background = element_rect(fill = "black"),
      panel.grid.major.y = element_blank(),
      panel.grid.minor.x = element_blank(),
      panel.spacing = unit(1, "cm"),
      panel.background = element_rect(
        fill = "grey5",
        color = alpha(text_col),
        linewidth = 2
      )
    )
```